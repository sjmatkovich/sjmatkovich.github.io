[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "Exploring other languages\n\n\n\n\n\n\nPython\n\n\nGoogle\n\n\nKaggle\n\n\nmachine learning\n\n\nNextflow\n\n\nSeqera\n\n\nblog\n\n\n\nFirst steps with Python and Nextflow\n\n\n\n\n\nNov 27, 2024\n\n\nScot J Matkovich\n\n\n\n\n\n\n\n\n\n\n\n\nUsing limma without empirical Bayes\n\n\n\n\n\n\nR\n\n\nBioconductor\n\n\nlimma\n\n\ndifferential gene expression\n\n\nempirical Bayes\n\n\nblog\n\n\n\nModifying the R/Bioconductor limma workflow\n\n\n\n\n\nSep 7, 2024\n\n\nScot J Matkovich\n\n\n\n\n\n\n\n\n\n\n\n\nFirst post\n\n\n\n\n\n\nQuarto\n\n\nR\n\n\nblog\n\n\nwebsite\n\n\n\nA small set of acknowledgements\n\n\n\n\n\nJan 3, 2024\n\n\nScot J Matkovich\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Scot J Matkovich",
    "section": "",
    "text": "Welcome!\nI hold a Ph.D in biochemistry and molecular biology and currently work as a computational biologist in drug discovery for cardiovascular and metabolic diseases. One of my greatest interests outside my scientific career and the improvement of public health is making music on the piano in the Western classical tradition; a gateway to many other musical pursuits.\n\nProfessional experience\nMy LinkedIn page has a comprehensive profile. As a summary:\n\nDirector / Principal Research Scientist | Eli Lilly and Co | 2018 - present\nAssistant Professor, Department of Medicine | Washington University in St Louis | 2011-2018\nSenior Scientist, Department of Medicine (PI: Gerald W Dorn II) | Washington University in St Louis | 2008-2011\nPostdoctoral appointments at Columbia University in New York (PI: Andrew R Marks) and the University of Cincinnati (PI: Gerald W Dorn II)\n\n\nEducation\nFormal degrees\n\nPh.D (Biochemistry & Molecular Biology), University of Melbourne, Parkville, Australia. Thesis title ‘Inositol phosphate generation in the heart: mechanisms and functional relevance’. Advisor: Elizabeth A Woodcock\nBSc (Hons.), Department of Physiology, University of Melbourne, Parkville, Australia\nBA / BSc, University of Melbourne, Parkville, Australia. Majors: French, German, music, biochemistry, physiology\n\nCertifications\n\nMultiple edX and Coursera programs in statistics and data science, including most elements of the reputable Johns Hopkins Data Science Specialization series\nA.Mus.A (Associate in Music, Australia) in piano performance from the Australian Music Examinations Board"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this website",
    "section": "",
    "text": "This site was built by Scot Matkovich using Quarto and is hosted on GitHub Pages.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites"
  },
  {
    "objectID": "posts/2024-01-03_first_post/index.html",
    "href": "posts/2024-01-03_first_post/index.html",
    "title": "First post",
    "section": "",
    "text": "A start to documenting my exploration of ‘biological data science’\nThis is merely a first post to establish a personal blog, which also serves as a brief set of acknowledgments and future resources. Any stated opinions or recommendations are entirely my own, independent of professional affiliation.\nResources which were invaluable in getting this website and blog started were:\n\nThe description of the Quarto system in Hadley Wickham’s 2nd edition of R for data science\nExcellent walk-through tutorials on establishing a website and blog with the Quarto system from Samantha Csik\nSome of the official Quarto documentation\n\nFor future enhancement and exploration, I’m looking forward to exploring:\n\nThe resources listed at the ‘Awesome Quarto’ github repository\nMore of Samantha Csik’s tutorials, specifically on SASS/CSS website customization\n\n\n\n\n\nCitationBibTeX citation:@online{matkovich2024,\n  author = {Matkovich, SJ},\n  title = {First Post},\n  date = {2024-01-03},\n  url = {https://sjmatkovich.github.io/posts/2024-01-03_first_post/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nMatkovich, SJ. 2024. “First Post.” January 3, 2024. https://sjmatkovich.github.io/posts/2024-01-03_first_post/."
  },
  {
    "objectID": "posts/2024-09-07_limma_without_empirical_Bayes/index.html",
    "href": "posts/2024-09-07_limma_without_empirical_Bayes/index.html",
    "title": "Using limma without empirical Bayes",
    "section": "",
    "text": "You are preparing differential gene expression calculations with the R/Bioconductor limma package (including RNA-sequencing extensions such as limma-voom). While limma offers empirical Bayes moderation of t-statistics (‘borrowing’ variance estimates across genes), you have a large number of individual samples or have other reasons to avoid this procedure.\n\n\n\nOmitting the eBayes step in the limma workflow means that t-statistics are not calculated, and the useful topTable function of the package to summarize differential expression calculations does not function.\nFor example (assuming that you have prepared a DGEList object d, a model formula design and a contrasts matrix contrasts.matrix), a typical workflow including empirical Bayes moderation would be as follows:\n\nv &lt;- voom(d, design, plot = T)\nvfit &lt;- lmFit(v, design)\nvfit_c &lt;- contrasts.fit(vfit, contrasts=contrast.matrix)\n\n# Empirical Bayes moderation\nvfit_eb &lt;- eBayes(vfit_c, 0.01) # estimating that 1% of genes are differentially expressed\n\nx &lt;- topTable(vfit_eb, number=Inf, coef=z, sort.by=\"none\")\n# z is the contrast of interest\n# No restrictions are placed on the output of topTable (number=Inf)\ndf &lt;- as.data.frame(x[,c(1:6)]) # to extract important columns\n\n\n\n\nAn alternative workflow which does not use empirical Bayes moderation and calculates t-statistics separately would be as follows:\n\nv &lt;- voom(d, design, plot = T)\nvfit &lt;- lmFit(v, design)\nvfit_c &lt;- contrasts.fit(vfit, contrasts=contrast.matrix)\n\nvfit_c$t &lt;- vfit_c$coef/vfit_c$stdev.unscaled/vfit_c$sigma\nvfit_c$p.value &lt;- 2 * pt(-abs(vfit_c$t), df = vfit_c$df.residual)\nvfit_c$lods &lt;- vfit_eb$lods\n# log-odds of differential expression:\n# this is not technically correct in this instance but permits the subsequent topTable function to work\n\nx &lt;- topTable(vfit_c, number=Inf, coef=z, sort.by=\"none\") # z is the contrast of interest\ndf &lt;- as.data.frame(x[,c(1:5)]) # this drops the B value (lods) from the output as it is not correct\n\nNote the last line of the second workflow, which drops the ‘dummy’ B value needed for topTable to work. This is a limitation of this workaround. I suspect the ‘dummy’ B value could be almost anything, but for convenience I extracted it from the initial, empirical Bayes-moderated vfit_eb object. Typically I am interested in parallel calculations with and without the empirical Bayes step.\n\n\n\nI discovered this workaround in Google and/or Stack Overflow searches in 2023 but did not carefully note its source. It may well have been suggested by one of the limma package authors.\nI have placed this same material in a gist"
  },
  {
    "objectID": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#situation",
    "href": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#situation",
    "title": "Using limma without empirical Bayes",
    "section": "",
    "text": "You are preparing differential gene expression calculations with the R/Bioconductor limma package (including RNA-sequencing extensions such as limma-voom). While limma offers empirical Bayes moderation of t-statistics (‘borrowing’ variance estimates across genes), you have a large number of individual samples or have other reasons to avoid this procedure."
  },
  {
    "objectID": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#problem",
    "href": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#problem",
    "title": "Using limma without empirical Bayes",
    "section": "",
    "text": "Omitting the eBayes step in the limma workflow means that t-statistics are not calculated, and the useful topTable function of the package to summarize differential expression calculations does not function.\nFor example (assuming that you have prepared a DGEList object d, a model formula design and a contrasts matrix contrasts.matrix), a typical workflow including empirical Bayes moderation would be as follows:\n\nv &lt;- voom(d, design, plot = T)\nvfit &lt;- lmFit(v, design)\nvfit_c &lt;- contrasts.fit(vfit, contrasts=contrast.matrix)\n\n# Empirical Bayes moderation\nvfit_eb &lt;- eBayes(vfit_c, 0.01) # estimating that 1% of genes are differentially expressed\n\nx &lt;- topTable(vfit_eb, number=Inf, coef=z, sort.by=\"none\")\n# z is the contrast of interest\n# No restrictions are placed on the output of topTable (number=Inf)\ndf &lt;- as.data.frame(x[,c(1:6)]) # to extract important columns"
  },
  {
    "objectID": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#solution",
    "href": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#solution",
    "title": "Using limma without empirical Bayes",
    "section": "",
    "text": "An alternative workflow which does not use empirical Bayes moderation and calculates t-statistics separately would be as follows:\n\nv &lt;- voom(d, design, plot = T)\nvfit &lt;- lmFit(v, design)\nvfit_c &lt;- contrasts.fit(vfit, contrasts=contrast.matrix)\n\nvfit_c$t &lt;- vfit_c$coef/vfit_c$stdev.unscaled/vfit_c$sigma\nvfit_c$p.value &lt;- 2 * pt(-abs(vfit_c$t), df = vfit_c$df.residual)\nvfit_c$lods &lt;- vfit_eb$lods\n# log-odds of differential expression:\n# this is not technically correct in this instance but permits the subsequent topTable function to work\n\nx &lt;- topTable(vfit_c, number=Inf, coef=z, sort.by=\"none\") # z is the contrast of interest\ndf &lt;- as.data.frame(x[,c(1:5)]) # this drops the B value (lods) from the output as it is not correct\n\nNote the last line of the second workflow, which drops the ‘dummy’ B value needed for topTable to work. This is a limitation of this workaround. I suspect the ‘dummy’ B value could be almost anything, but for convenience I extracted it from the initial, empirical Bayes-moderated vfit_eb object. Typically I am interested in parallel calculations with and without the empirical Bayes step."
  },
  {
    "objectID": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#credit-where-credit-is-due",
    "href": "posts/2024-09-07_limma_without_empirical_Bayes/index.html#credit-where-credit-is-due",
    "title": "Using limma without empirical Bayes",
    "section": "",
    "text": "I discovered this workaround in Google and/or Stack Overflow searches in 2023 but did not carefully note its source. It may well have been suggested by one of the limma package authors.\nI have placed this same material in a gist"
  },
  {
    "objectID": "posts/2024-11-27_exploring_other_languages/index.html",
    "href": "posts/2024-11-27_exploring_other_languages/index.html",
    "title": "Exploring other languages",
    "section": "",
    "text": "R was the first language in which I developed a level of proficiency and continues to be the major language I use for biological data science. The Bioconductor environment was the selling point for me.\n\nI’ve taken seriously the recommendations of several experts to become highly competent in one programming language before moving on to others, and knowing a little about a large number of languages only goes so far.\n\nNonetheless, I’ve wanted to develop some ability in Python for a couple of reasons:\n* One of the three major environments for single-cell / single-nucleus is Python-based (the scverse), in contrast to the R-based Seurat and Bioconductor SingleCellExperiment approaches\n* Google has a mini machine-learning course that uses Python for its exercises. I’d like to take advantage of a quick refresher course such as this to update my learning from the ‘Practical Machine Learning’ module of the Johns Hopkins Data Science Specialization on Coursera, which I took a few years ago.\n\n\nJust to get my feet wet with the essential syntax and structures, I found this introductory series on Kaggle to be very helpful: https://www.kaggle.com/learn/python\nI’m going to supplement this with a couple of recommended prerequisites for Google’s course: NumPy and pandas\n\n\n\nNextflow? Why Nextflow?\nMy workplace is migrating from an on-premises compute environment for genomic and genetic analyses. Most of the pre-defined omics workflows are from the nfcore project. While it’s relatively unlikely that I’ll be developing new pipelines or substantially modifying current ones, I had the opportunity to take two days of live training based on Seqera’s online material, so why not?\n\nOne of the comments made by the trainers was that Nextflow should be considered for individual workflows, not just for analyses requiring compute-cluster scale. The advantages lie in reproducibility, and in avoiding the need to re-compute time-consuming steps of a workflow that have not changed (compared to notebooks / Quarto documents).\n\nHow might this compare to e.g. the R {targets} package?"
  },
  {
    "objectID": "posts/2024-11-27_exploring_other_languages/index.html#python",
    "href": "posts/2024-11-27_exploring_other_languages/index.html#python",
    "title": "Exploring other languages",
    "section": "",
    "text": "Just to get my feet wet with the essential syntax and structures, I found this introductory series on Kaggle to be very helpful: https://www.kaggle.com/learn/python\nI’m going to supplement this with a couple of recommended prerequisites for Google’s course: NumPy and pandas"
  },
  {
    "objectID": "posts/2024-11-27_exploring_other_languages/index.html#nextflow",
    "href": "posts/2024-11-27_exploring_other_languages/index.html#nextflow",
    "title": "Exploring other languages",
    "section": "",
    "text": "Nextflow? Why Nextflow?\nMy workplace is migrating from an on-premises compute environment for genomic and genetic analyses. Most of the pre-defined omics workflows are from the nfcore project. While it’s relatively unlikely that I’ll be developing new pipelines or substantially modifying current ones, I had the opportunity to take two days of live training based on Seqera’s online material, so why not?\n\nOne of the comments made by the trainers was that Nextflow should be considered for individual workflows, not just for analyses requiring compute-cluster scale. The advantages lie in reproducibility, and in avoiding the need to re-compute time-consuming steps of a workflow that have not changed (compared to notebooks / Quarto documents).\n\nHow might this compare to e.g. the R {targets} package?"
  }
]